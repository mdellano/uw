/*******************************************************
 Funciones de asistencia.
-------------------------------------------------------
*******************************************************/
//Levanto la configuracion y los helpers
var config=require('../../../config.js');
global.uw={};
global.uw.config=config;
function service(path) {
	return require("../../../"+global.uw.config.path+path);
}
function log(text) {
	require('./log.js')(text);
}
module.exports=new function() {
	
	this.run=function() {
	/*******************************************************
	 Inicio del bloque de ejecucion.
	-------------------------------------------------------
	*******************************************************/
	log('==================================================');
	log('Initializing Express Server');
	log('==================================================');
	//Inicio el servicio de Express
	var Express=require('express');
	var Server = Express();
	log('Processing static paths');
	//Configuro el path a los archivos estaticos
	for (var path in config.static)  {
		log(' . Loading static file path =>'+config.static[path]);
		Server.use(Express.static(config.static[path]));
	}
	Server.use(Express.bodyParser());
	Server.use(Express.methodOverride());
	Server.use(Server.router);
	log('Configuring error callback');
	Server.use(service(config.error));

	//Levanto los servicios configurados get
	for (var path in config.get)  {
		log(' . Loading get file path =>'+path);
		var services=config.get[path].services;
		var lst=[]; 
		for (var i=0;i<services.length;i++) {
			log(' .. Loading module =>'+services[i]);
			lst.push(service(services[i]));
		}
		Server.get(path,lst);
	}
	//Levanto los servicios configurados post
	for (var path in config.post)  {
		log(' . Loading get file path =>'+path);
		var services=config.get[path].services;
		var lst=[];
		for (var i=0;i<services.length;i++) {
			log(' .. Loading module =>'+services[i]);
			lst.push(service(services[i]));
		}
		Server.post(path,lst);
	}
	//Levanto los servicios configurados put
	for (var path in config.put)  {
		log(' . Loading get file path =>'+path);
		var services=config.get[path].services;
		var lst=[];
		for (var i=0;i<services.length;i++) {
			log(' .. Loading module =>'+services[i]);
			lst.push(service(services[i]));
		}
		Server.put(path,lst);
	}
	Server.listen(config.port);
	}
}
